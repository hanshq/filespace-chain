// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: filespacechain/filespacechain/hosting_contract.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type HostingContract struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InquiryId uint64 `protobuf:"varint,2,opt,name=inquiryId,proto3" json:"inquiryId,omitempty"`
	OfferId   uint64 `protobuf:"varint,3,opt,name=offerId,proto3" json:"offerId,omitempty"`
	Creator   string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *HostingContract) Reset()         { *m = HostingContract{} }
func (m *HostingContract) String() string { return proto.CompactTextString(m) }
func (*HostingContract) ProtoMessage()    {}
func (*HostingContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c3c44867a41fc3e, []int{0}
}
func (m *HostingContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HostingContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HostingContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HostingContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostingContract.Merge(m, src)
}
func (m *HostingContract) XXX_Size() int {
	return m.Size()
}
func (m *HostingContract) XXX_DiscardUnknown() {
	xxx_messageInfo_HostingContract.DiscardUnknown(m)
}

var xxx_messageInfo_HostingContract proto.InternalMessageInfo

func (m *HostingContract) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HostingContract) GetInquiryId() uint64 {
	if m != nil {
		return m.InquiryId
	}
	return 0
}

func (m *HostingContract) GetOfferId() uint64 {
	if m != nil {
		return m.OfferId
	}
	return 0
}

func (m *HostingContract) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*HostingContract)(nil), "filespacechain.filespacechain.HostingContract")
}

func init() {
	proto.RegisterFile("filespacechain/filespacechain/hosting_contract.proto", fileDescriptor_0c3c44867a41fc3e)
}

var fileDescriptor_0c3c44867a41fc3e = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x49, 0xcb, 0xcc, 0x49,
	0x2d, 0x2e, 0x48, 0x4c, 0x4e, 0x4d, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x47, 0xe3, 0x66, 0xe4, 0x17,
	0x97, 0x64, 0xe6, 0xa5, 0xc7, 0x27, 0xe7, 0xe7, 0x95, 0x14, 0x25, 0x26, 0x97, 0xe8, 0x15, 0x14,
	0xe5, 0x97, 0xe4, 0x0b, 0xc9, 0xa2, 0x2a, 0xd3, 0x43, 0xe5, 0x2a, 0x15, 0x73, 0xf1, 0x7b, 0x40,
	0x34, 0x3a, 0x43, 0xf5, 0x09, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0,
	0x04, 0x31, 0x65, 0xa6, 0x08, 0xc9, 0x70, 0x71, 0x66, 0xe6, 0x15, 0x96, 0x66, 0x16, 0x55, 0x7a,
	0xa6, 0x48, 0x30, 0x81, 0x85, 0x11, 0x02, 0x42, 0x12, 0x5c, 0xec, 0xf9, 0x69, 0x69, 0xa9, 0x45,
	0x9e, 0x29, 0x12, 0xcc, 0x60, 0x39, 0x18, 0x17, 0x24, 0x93, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x5f,
	0x24, 0xc1, 0xa2, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x3a, 0x05, 0x9d, 0x78, 0x24, 0xc7, 0x78,
	0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7,
	0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94, 0x45, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e,
	0xae, 0x7e, 0x46, 0x62, 0x5e, 0x71, 0x46, 0x21, 0xc2, 0x9b, 0xba, 0x10, 0x7f, 0x56, 0xa0, 0x7b,
	0xbc, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0xec, 0x5d, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x91, 0x04, 0x6b, 0x22, 0x26, 0x01, 0x00, 0x00,
}

func (m *HostingContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HostingContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HostingContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintHostingContract(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if m.OfferId != 0 {
		i = encodeVarintHostingContract(dAtA, i, uint64(m.OfferId))
		i--
		dAtA[i] = 0x18
	}
	if m.InquiryId != 0 {
		i = encodeVarintHostingContract(dAtA, i, uint64(m.InquiryId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintHostingContract(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintHostingContract(dAtA []byte, offset int, v uint64) int {
	offset -= sovHostingContract(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *HostingContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovHostingContract(uint64(m.Id))
	}
	if m.InquiryId != 0 {
		n += 1 + sovHostingContract(uint64(m.InquiryId))
	}
	if m.OfferId != 0 {
		n += 1 + sovHostingContract(uint64(m.OfferId))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovHostingContract(uint64(l))
	}
	return n
}

func sovHostingContract(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozHostingContract(x uint64) (n int) {
	return sovHostingContract(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HostingContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowHostingContract
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HostingContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HostingContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InquiryId", wireType)
			}
			m.InquiryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InquiryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferId", wireType)
			}
			m.OfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthHostingContract
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthHostingContract
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipHostingContract(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthHostingContract
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipHostingContract(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowHostingContract
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowHostingContract
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthHostingContract
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupHostingContract
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthHostingContract
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthHostingContract        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowHostingContract          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupHostingContract = fmt.Errorf("proto: unexpected end of group")
)
